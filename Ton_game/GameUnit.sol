
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "GameObject.sol";

interface BaseStation {
    function addUnit(GameUnit unitAddress) external;
    function removeUnit(GameUnit unitAddress) external;
}

contract GameUnit is GameObject{

    BaseStation base;
    int damage;

    constructor(BaseStation _base) public {
        // Check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        // Check that message has signature (msg.pubkey() is not zero) and
        // message is signed with the owner's private key
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();

        base = _base;
        base.addUnit(this);
    }

    function getDamage() public view returns (int) {
        tvm.accept();
        return damage;
    }

    function attack(GameObjectInterface target) public {
        tvm.accept();
        target.resolveAttack(damage);
    }

    function resolveDeath(address attacker) internal override {
        tvm.accept();
        base.removeUnit(this);
        sendTransactionAllAndDestroy(attacker);
    }
    
    function deathByBaseDestruction(address attacker) external {
        require(msg.sender == base, 100);
        sendTransactionAllAndDestroy(attacker);
    }
}

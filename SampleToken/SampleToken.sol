
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

contract SampleToken {
    
    struct Token {
        string name;
        uint speed;
    }

    Token[] tokensArr;
    mapping (uint=>uint) tokenToOwner;

    mapping (uint=>uint) marketplace;

    modifier checkOwnerAndAccept(uint tokenId) {
        require(msg.pubkey() == tokenToOwner[tokenId], 101);
        tvm.accept();
        _;
    }

    function createToken(string name, uint speed) public {
        for (Token Check : tokensArr) {
            require(Check.name != name, 103);
        }
        tvm.accept();
        tokensArr.push(Token(name, speed));
        uint keysAsLastNum = tokensArr.length - 1;
        tokenToOwner[keysAsLastNum] = msg.pubkey();
    }

    function getTokenOwner (uint tokenId) public view returns (uint) {
        return tokenToOwner[tokenId];
    }

    function getTokenInfo (uint tokenId) public view returns (string tokenName, uint tokenSpeed) {
        tokenName = tokensArr[tokenId].name;
        tokenSpeed = tokensArr[tokenId].speed;
    }

    function changeOwner (uint tokenId, uint pubkeyOfNewOwner) public checkOwnerAndAccept(tokenId){
        tokenToOwner[tokenId] = pubkeyOfNewOwner;
    }

    function placeOnMarketplace(uint tokenId, uint price) public checkOwnerAndAccept(tokenId){
        marketplace[tokenId] = price;
    }
}

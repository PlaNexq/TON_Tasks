
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */

pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "itemStructs.sol";
import "IItemList.sol";

contract ShoppingList is IItemList {
    uint256 m_ownerPubkey;
    uint32 m_count;

    mapping(uint32 => Item) m_items;
    ItemsSummary m_itemsSummary;

    modifier onlyOwner() {
        require(msg.pubkey() == m_ownerPubkey, 101);
        _;
    }

    constructor(uint256 pubkey) public {
        require(pubkey != 0, 120);
        tvm.accept();
        m_ownerPubkey = pubkey;
    }

    function addItem(string name, uint64 count) override public onlyOwner {
        tvm.accept();
        m_count++;
        m_items[m_count] = Item(m_count, name, count, now, false, 0);
        m_itemsSummary.notBoughtCount += count;
    }

    function buyItem(uint32 id, uint256 price) override public onlyOwner {
        require(m_items.exists(id), 102);
        tvm.accept();

        Item itemNeeded = m_items[id];
        itemNeeded.isBought = true;
        itemNeeded.price = price;

        m_itemsSummary.boughtCount += itemNeeded.count;
        m_itemsSummary.notBoughtCount -= itemNeeded.count;
        m_itemsSummary.totalPrice += itemNeeded.price;
    }

    function deleteItem(uint32 id) override public onlyOwner {
        require(m_items.exists(id), 102);
        tvm.accept();

        Item itemNeeded = m_items[id];
        if (itemNeeded.isBought) {
            m_itemsSummary.totalPrice -= itemNeeded.price;
            m_itemsSummary.boughtCount -= itemNeeded.count;
        }
        delete itemNeeded;
    }

    function getItems() override public returns (Item[] items) {
        for((uint32 id, Item item) : m_items) {
            string name = item.name;
            uint64 count = item.count;
            uint32 timestamp = item.timestamp;
            bool isBought = item.isBought;
            uint256 price = item.price;
            items.push(Item(id, name, count, timestamp, isBought, price));
       }
    }

    function getStat() override public returns (ItemsSummary){
        return m_itemsSummary;
    }

}
